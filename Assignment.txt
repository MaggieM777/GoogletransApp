Как да създадете приложение за превод на текст и да го хостнете в Streamlit

Цел на заданието:
В това задание ще създадете малко Python приложение за превод на текст, което ще хостнете на Streamlit. 
Ще научите как да използвате GitHub за съхранение на кода и ще хоствате приложението си, за да може да го достъпвате от всяко устройство.

Част 1: Какво ще направим:
Създаване на приложение за превод на текст с Python и Streamlit.

Качване на кода в GitHub.

Регистрация в Streamlit и хостване на приложението.

Част 2: Стъпки за изпълнение:
Стъпка 1: Създаване на акаунт в Streamlit
Отворете https://streamlit.io/.

Кликнете върху Sign Up в горния десен ъгъл.

Регистрирайте се с акаунт в Google или чрез имейл.

След като се регистрирате, ще имате възможност да хоствате приложения на Streamlit.

Стъпка 2: Създаване на акаунт в GitHub
Отидете на https://github.com/.

Кликнете върху Sign Up.

Следвайте стъпките за регистрация, като въведете имейл, потребителско име и парола.

След регистрацията ще имате достъп до репозитории, в които можете да качвате и съхранявате вашия код.

Стъпка 3: Създаване на Python приложение за превод на текст
Описание на приложението:
Приложението ще използва библиотеки като Streamlit и googletrans, за да предостави функционалност за превод на текст. Ще се въвежда текст от потребителя и ще може да се избира език за превод.

Код на приложението:

import streamlit as st
from googletrans import Translator

# Заглавие
st.title('Приложение за превод на текст')

# Входен текст
text = st.text_input("Въведете текст за превод:")

# Избор на език
language = st.selectbox("Изберете език за превод", ["en", "fr", "de", "it", "es"])

# Превод
if text:
    translator = Translator()
    translation = translator.translate(text, dest=language)
    st.write(f'Преведеният текст на {language}: {translation.text}')

Стъпка 4: Какво правят библиотеките:
Streamlit - Това е библиотека, която прави създаването на уеб приложения изключително лесно. 
Тя автоматично генерира интерактивни уеб страници от Python код и ни позволява да виждаме резултатите в реално време.

В този код, st.title() създава заглавието на страницата.

st.text_input() създава поле за въвеждане на текст.

st.selectbox() създава падащо меню за избор на език за превод.

st.write() извежда резултата от превода на екрана.

googletrans - Това е библиотека, която предоставя лесен начин за използване на Google Translate API. 
С нея можем да превеждаме текст на множество езици. В нашето приложение тя се използва, за да превежда текста, въведен от потребителя, на избрания език.

Translator() създава обект за превод.

translate(text, dest=language) изпълнява превод на текста в променливата text на избрания език (language).

Стъпка 5: Създаване на requirements.txt файл
В основната директория на проекта, създайте файл с името requirements.txt.

Вътре в този файл поставете следния текст:

streamlit==1.45.0
googletrans==4.0.0-rc1

Тези библиотеки ще се инсталират автоматично, когато стартирате проекта. Библиотеката Streamlit е необходима за изграждане на уеб интерфейса, а googletrans е за самия превод на текст.

Стъпка 6: Качване на кода в GitHub
Създайте ново репозиторио в GitHub:

Отидете в GitHub и кликнете върху New Repository.

Дайте му име (например: text-translation-app) и кликнете върху Create repository.

Качете файловете:

На вашето локално устройство създайте нова папка за проекта.

Вътре в тази папка създайте Python файла (например app.py) с кода по-горе и requirements.txt.


Стъпка 7: Хостване на приложението в Streamlit
Свържете Streamlit с GitHub:

Влезте в своя Streamlit акаунт.

Кликнете върху New app.

Изберете GitHub като източник и свържете акаунта си.

Изберете репозиторията, в която сте качили кода.

Кликнете върху Deploy.

Изчакайте: Приложението ще бъде хостнато в Streamlit и ще получите линк към него, който можете да споделяте с другите.


Част 3: Допълнителни стъпки:
Добавете допълнителни езици за превод в списъка.

Персонализирайте приложението като добавите различни стилове и форматиране с CSS.

Оптимизирайте приложението, като добавите функция за автоматично разпознаване на езика на входния текст.

